syntax = "proto3";
package go_protocol;

option go_package = "./go_protocol";

// 基础返回体 具体信息会在message里面
message StandardRsp {
  int32  status  = 1; // 返回状态码
  string error   = 2; // 错误信息
  string message = 3; // 返回信息
}

// 登录态结构
message LoginStatus {
  string id       = 1; // 用户id
  string token    = 2; // 用户token
  //string mode  = 3; // 用户操作模式 1：个人注册  2：单位注册  3：修改  4：信息员变更   5：管理员登录
  string ip       = 4; // 用户ip
  //bool   admin      = 6; // 管理员标志
  int32  passStep = 8; // 校验通过情况
  string prefix   = 9; // 前缀
}

message SingleLogInfo {
  int32  logType   = 1;  // 查询日志类型
  string id        = 3;  // 用户id
  string fullPath  = 4;  // 请求路径
  string status    = 5;  // 操作结果
  string req       = 6;  // 请求参数
  string message   = 7;  // 操作结果信息
  string time      = 8;  // 日志产生时间
  int64  timeStamp = 9;  // 日志产生时间戳
  string imgUrl    = 10; // 单位注册时的图片url
  string reserve1  = 11; // 保留字段1
  string reserve2  = 12; // 保留字段2
}